---
- name: Add htop and atomic repos
  become: yes
  yum_repository:
    name: "{{ repo.name }}"
    description: "{{ repo.description }}"
    file: "{{ repo.file }}"
    baseurl: "{{ repo.baseurl | default(omit) }}"
    mirrorlist: "{{ repo.mirrorlist | default(omit) }}"
    gpgcheck: "{{ 'yes' if repo.gpgkey is defined else 'no' }}"
    gpgkey: "{{ repo.gpgkey | default(omit) }}"
    enabled: yes
  vars:
    ansible_python_interpreter: /usr/bin/python
  with_items:
  - {
    'name': 'ntop',
    'file': 'ntop',
    'description': 'ntop repo',
    'baseurl': 'http://packages.ntop.org/centos-stable/7/$basearch/',
    'gpgkey': 'http://packages.ntop.org/centos-stable/RPM-GPG-KEY-deri'
    }
  - {
    'name': 'ntop-noarch',
    'file': 'ntop',
    'description': 'ntop repo',
    'baseurl': 'http://packages.ntop.org/centos-stable/7/noarch/',
    'gpgkey': 'http://packages.ntop.org/centos-stable/RPM-GPG-KEY-deri'
    }
  - {
    'name': 'atomic',
    'file': 'atomic',
    'description': 'CentOS / Red Hat Enterprise Linux 7 - atomic',
    'baseurl': 'http://mirrors.thzhost.com/atomic/centos/7/$basearch'
    }
  - {
    'name': 'atomic-testing',
    'file': 'atomic',
    'description': 'CentOS / Red Hat Enterprise Linux 7 - atomic - (Testing)',
    'baseurl': 'http://mirrors.thzhost.com/atomic/centos/7/$basearch'
    }
  loop_control:
    loop_var: repo
    label: "{{ repo.name }}"

- name: Uninstall conflicting packages (preinstalled in AmazonLinux2)
  become: yes
  package:
    name:
      - GeoIP
    state: absent
  vars:
    ansible_python_interpreter: /usr/bin/python

- name: Install EPEL Repository
  become: yes
  package:
    name:
    - https://fedora.cu.be/epel/epel-release-latest-7.noarch.rpm
    state: present
  vars:
    ansible_python_interpreter: /usr/bin/python

- name: Install needed packages
  become: yes
  package:
    name:
      - httpd
      - php
      - php-fpm
      - pfring-dkms
      - n2disk
      - nprobe
      - ntopng
      - cento
      - postfix
      - python3
    state: present
  vars:
    ansible_python_interpreter: /usr/bin/python
  notify:
    - 'Restart ntopng'
    - 'Restart httpd'
    - 'Restart postfix'

- name: Disable ntopng login
  become: yes
  lineinfile:
    path: /etc/ntopng/ntopng.conf
    regex: "^--disable-login "
    line: --disable-login 1
  notify:
    - 'Restart ntopng'

- name: Enable ntopng community edition
  become: yes
  lineinfile:
    path: /etc/ntopng/ntopng.conf
    regex: "^--community"
    line: --community
  notify:
    - 'Restart ntopng'

- name: Uncompress html files
  become: yes
  unarchive:
    src: html.tar.gz
    dest: /var/www/html
    owner: root
    group: apache
    mode: 'u=rwX,g=rX,o=rX'

- name: Ensure /root/scripts directory
  become: yes
  file:
    path: /root/scripts
    state: directory

- name: Uncompress root scripts
  become: yes
  unarchive:
    src: root-scripts.tar.gz
    dest: /root/scripts/
    owner: root
    group: root
    mode: 'u=rwx,g=,o='

- name: Create systemd services
  become: yes
  copy:
    src: "{{ srv }}.service"
    dest: "/etc/systemd/system/{{ srv }}.service"
  notify:
    - "Restart {{ srv }}"
  with_items:
    - bolo
    - free
  loop_control:
    loop_var: srv

- name: Configure postfix
  become: yes
  lineinfile:
    path: "/etc/postfix/{{ pfxconf.file | default('main.cf') }}"
    state: present
    insertafter: "^#?{{ pfxconf.key | default(omit) }}"
    regexp: "^{{ pfxconf.key | default(omit) }}"
    line: "{{ pfxconf.key + ' = ' + pfxconf.value if pfxconf.data is not defined else pfxconf.data }}"
  notify:
    - 'Restart postfix'
  with_items:
  - {'key': 'inet_interfaces', 'value': 'all'}
  - {'key': 'myhostname', 'value': 'straylight'}
  - {'key': 'mynetworks', 'value': '{{ ( postfix_mynetworks + ["127.0.0.1/8"] ) | unique | join(", ") }}'}
  - {'key': 'header_checks', 'value': 'regexp:/etc/postfix/header_checks'}
  - {'file': 'header_checks', 'data': '/^Subject:/     WARN'}
  loop_control:
    loop_var: pfxconf
    label: "{{ pfxconf.key if pfxconf.data is not defined else pfxconf.data}}"

- name: Ensure mail.log existence
  become: yes
  file:
    path: /var/log/mail.log
    owner: root
    group: root
    mode: '0644'
    state: touch

- name: Ensure mail.log in rsyslog
  become: yes
  lineinfile:
    path: /etc/rsyslog.conf
    state: present
    regex: '^mail\.\*'
    line: "mail.*{{'\t\t\t'}}-/var/log/mail.log"
  notify:
  - Restart rsyslog

- name: Check if screen 4.5.0 is installed
  become: yes
  shell: screen --version | fgrep -q 'Screen version 4.05.00 (GNU)'
  register: screen
  failed_when: no

- name: Install screen
  include_tasks:
    file: install-screen.yml
  when: screen.rc != 0
